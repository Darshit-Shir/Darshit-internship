@model SchoolManagement_396.Models.Model.StudentModel

@{
    ViewBag.Title = "AddStudent";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />

<h2>Add Student</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <div>
            @if (@ViewBag.StudentError != null)
            {
                <p class="text-danger">@ViewBag.StudentError</p>
            }
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountryId, "CountryId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.DropDownListFor(m => m.CountryId, ViewBag.CountryList as SelectList, "--- Select Country Name ---", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StateId, "StateId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.DropDownListFor(m => m.StateId, new SelectList(""), "--- Select State Name ---", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CityId, "CityId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.DropDownListFor(m => m.CityId, new SelectList(""), "--- Select City Name ---", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TeacherId, "Subject Name :", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.DropDownList("TeacherList", new MultiSelectList(""), new { id = "Teacher", @class = "form-control", @multiple = "" })
                @Html.ValidationMessageFor(model => model.TeacherId, "", new { @class = "text-danger" })
                @Html.HiddenFor(x => x.TeacherId)
            </div>
        </div>

        <div class="form-group text-center d-flex justify-content-center">
            <div class="col-md-offset-2">
                <input type="submit" value="Submit" class="btn btn-success" />
            </div>

            <div>
                <a class="btn btn-danger" style="margin-left: 8%" href="~/Student/ShowStudent">Cancel</a>
            </div>
        </div>
    </div>
}


<script>
    $(document).ready(function () {
        setTeacher()
        $("#CountryId").change(function () {
            var countryId = $(this).val();
            $.ajax({
                type: "post",
                url: "/Region/Statelist?CountryId=" + countryId,
                contentType: "html",
                success: function (response) {
                    $("#StateId").empty();
                    $("#CityId").empty();
                    $("#StateId").append(`<option>--- Select State Name ---</option>`)
                    for (i in response) {
                        $("#StateId").append(`<option value="${response[i].StateId}">${response[i].StateName}</option>`)
                    }
                }
            })
        })

        $("#StateId").change(function () {
            var CityId = $(this).val();
            $.ajax({
                type: "post",
                url: "/Region/Citylist?StateId=" + CityId,
                contentType: "html",
                success: function (response) {
                    console.log(response);
                    $("#CityId").empty();
                    for (j in response) {
                        $("#CityId").append(`<option value="${response[j].CityId}">${response[j].cityName}</option>`)
                    }
                }
            })
        })


        function setTeacher() {
            $.ajax({
                type: "post",
                url: "/Teacher/Teachers",
                contentType: "application/json",
                success: function (response) {
                    $("#Teacher").empty();
                    response.forEach((res) => {
                        console.log(res)
                        $("#Teacher").append(`<option value="${res.TeacherId}">${res.FirstName}</option>`);
                    })
                    $("#Teacher").select2();

                }
            })
        }
        $('#Teacher').change(() => {
            $('#TeacherId').val($('#Teacher').select2('data').map(x => x.id).join(','))
        })
    })
</script>


