@model SchoolManagement_396.Models.Model.TeacherModel

@{
    ViewBag.Title = "AddTeacher";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<div class="text-center">
    <h2>Fill Details</h2>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <div>
            @if (@ViewBag.TeacherError != null)
            {
                <p class="text-danger">@ViewBag.TeacherError</p>
            }
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subjects, "Subject Name :", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.DropDownList("SubjectList", new MultiSelectList(""), "--- Select Subject Name ---", new {id="Subject", @class = "form-control", @multiple = ""})
                @Html.ValidationMessageFor(model => model.Subjects, "", new { @class = "text-danger" })
                @Html.HiddenFor(x=>x.Subjects)
            </div>
        </div>


        <div class="form-group text-center d-flex justify-content-center">
            <div class="col-md-offset-2">
                <input type="submit" value="Submit" class="btn btn-success" />
            </div>

            <div>
                <a class="btn btn-danger" style="margin-left: 8%" href="~/Teacher/ShowTeachers">Cancel</a>
            </div>
        </div>
    </div>
}




@Scripts.Render("~/bundles/jqueryval")


<script>

    $(document).ready(function () {
        setSubject()

       function setSubject() {
            $.ajax({
                type: "post",
                url: "/Subject/Subjects",
                contentType: "application/json",
                success: function (response) {
                    $("#Subject").empty();
                    response.forEach((sub) => {
                        $("#Subject").append(`<option value="${sub.SubjectID}">${sub.SubjectName}</option>`);
                    })
                    $("#Subject").select2();

                }
            })
        }

        $('#Subject').change(() => {
            $('#Subjects').val($('#Subject').select2('data').map(x=>x.id).join(','))
        })
    })
</script>